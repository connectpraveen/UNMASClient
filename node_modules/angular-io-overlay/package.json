{
  "_args": [
    [
      {
        "raw": "angular-io-overlay@^1.2.7",
        "scope": null,
        "escapedName": "angular-io-overlay",
        "name": "angular-io-overlay",
        "rawSpec": "^1.2.7",
        "spec": ">=1.2.7 <2.0.0",
        "type": "range"
      },
      "D:\\Users\\Owner\\Workspaces\\Angular IDE 2017 CI II\\Angular IDE 2017 CI\\UNMASLearning\\node_modules\\angular-io-datepicker"
    ]
  ],
  "_from": "angular-io-overlay@>=1.2.7 <2.0.0",
  "_id": "angular-io-overlay@1.2.7",
  "_inCache": true,
  "_location": "/angular-io-overlay",
  "_nodeVersion": "6.9.5",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/angular-io-overlay-1.2.7.tgz_1496158281492_0.0887242411263287"
  },
  "_npmUser": {
    "name": "rd-dev",
    "email": "sales@rd-dev.net"
  },
  "_npmVersion": "4.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular-io-overlay@^1.2.7",
    "scope": null,
    "escapedName": "angular-io-overlay",
    "name": "angular-io-overlay",
    "rawSpec": "^1.2.7",
    "spec": ">=1.2.7 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/angular-io-datepicker"
  ],
  "_resolved": "https://registry.npmjs.org/angular-io-overlay/-/angular-io-overlay-1.2.7.tgz",
  "_shasum": "b5ed001b8b79ebe014423834080dd60c4fbac529",
  "_shrinkwrap": null,
  "_spec": "angular-io-overlay@^1.2.7",
  "_where": "D:\\Users\\Owner\\Workspaces\\Angular IDE 2017 CI II\\Angular IDE 2017 CI\\UNMASLearning\\node_modules\\angular-io-datepicker",
  "author": {
    "name": "Sergey Tokarev",
    "email": "sergey.tokarev@rd-dev.net"
  },
  "bugs": {
    "url": "https://github.com/rd-dev-ukraine/angular-io-overlay/issues"
  },
  "dependencies": {
    "@angular/common": "^4.0.0",
    "@angular/compiler": "^4.0.0",
    "@angular/core": "^4.0.0",
    "@angular/forms": "^4.0.0",
    "@angular/http": "^4.0.0",
    "@angular/platform-browser": "^4.0.0",
    "@angular/platform-browser-dynamic": "^4.0.0",
    "@angular/router": "^4.0.0",
    "core-js": "^2.4.1",
    "moment": "^2.14.1",
    "rxjs": "^5.1.0",
    "zone.js": "^0.8.4"
  },
  "description": "Overlay component that allows open a component in popup for angular2",
  "devDependencies": {
    "@angular/cli": "1.0.0",
    "@angular/compiler-cli": "^4.0.0",
    "@types/node": "~6.0.60",
    "codelyzer": "~2.0.0",
    "ts-node": "~2.0.0",
    "tslint": "~4.5.0",
    "typescript": "~2.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "b5ed001b8b79ebe014423834080dd60c4fbac529",
    "tarball": "https://registry.npmjs.org/angular-io-overlay/-/angular-io-overlay-1.2.7.tgz"
  },
  "gitHead": "c0c1e203df38f1b4afcbae490c6490383a33e3ac",
  "homepage": "https://github.com/rd-dev-ukraine/angular-io-overlay#readme",
  "keywords": [
    "angular",
    "angular2",
    "overlay",
    "popup",
    "component"
  ],
  "license": "MIT",
  "main": "./src/overlay/index.js",
  "maintainers": [
    {
      "name": "rd-dev",
      "email": "sales@rd-dev.net"
    }
  ],
  "name": "angular-io-overlay",
  "optionalDependencies": {},
  "readme": "# angular-io-overlay\r\n\r\nOverlay component that allows open a component in popup for Angular 2.\r\n\r\n## Motivation\r\n\r\nExisting popups do not work as they should... So we have written another one 😏\r\n\r\n## Installation\r\n\r\n````shell\r\nnpm i angular-io-overlay --save\r\n````\r\n\r\n## Code Example\r\n\r\n#### [Demo](https://rd-dev-ukraine.github.io/angular-io-overlay/)\r\n\r\nFirst of all you'll need to add `OverlayModule` to your application module.\r\n\r\n```typescript\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    OverlayModule,\r\n    ...\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule {}\r\n```\r\n\r\nAfter that import `AlignType` and `OverlayService` to your component. \r\nAlso we need `ElementRef`, `ComponentRef` and `ViewChild` from `@angular/core`.\r\nAnd import your component that will be in popup.\r\n\r\n```typescript\r\nimport { AlignType, OverlayService } from \"../overlay\";\r\nimport { ElementRef, ComponentRef, ViewChild } from \"@angular/core\";\r\nimport { ComponentThatShouldBeInPopup } from \"./foobar\";\r\n```\r\n\r\nInject `OverlayService` in your constructor arguments like this.\r\n\r\n```typescript\r\nconstructor(private overlayService: OverlayService) {}\r\n```\r\n\r\nAdd a private property `_popupRef`.\r\n\r\n```typescript\r\nprivate _popupRef: ComponentRef<any>;\r\n```\r\n\r\nYou will need to add a reference to the element that you will align with. Don't forget use it in your component constructor.\r\n\r\n```angular2html\r\n<div #alignWithContainer></div>\r\n```\r\n\r\n```typescript\r\n@ViewChild(\"alignWithContainer\") alignWithContainer: ElementRef;\r\n```\r\n\r\nThen add `overlay-host` element where is located your component to html.\r\n\r\n```angular2html\r\n<awesomeComponent></awesomeComponent>\r\n<overlay-host></overlay-host>\r\n```\r\n\r\nAnd now you can use `OverlayService` in your code.\r\n\r\n```typescript\r\nthis.overlayService.openComponentInPopup<ComponentThatShouldBeInPopup>(\r\n            ComponentThatShouldBeInPopup, {\r\n                alignWithElement: this.alignWithContainer,\r\n                alignment: {\r\n                    element: {\r\n                        horizontal: AlignType.Left,\r\n                        vertical: AlignType.Top\r\n                    },\r\n                    target: {\r\n                        horizontal: AlignType.Left,\r\n                        vertical: AlignType.Bottom\r\n                    }\r\n                },\r\n                closeOnClick: true\r\n            }\r\n        ).then(c => {\r\n            this._popupRef = c;\r\n            this._popupRef.onDestroy(() => {\r\n                this._popupRef = null;\r\n            });\r\n        });\r\n```\r\n\r\n## API Reference\r\n\r\n|Property          |Type      |Default    |Description                                                |\r\n| :--------------- | :------- | :-------- | :-------------------------------------------------------- |\r\n|`alignWithElement`|ElementRef|`undefined`|Reference to the element that popup will align with        |\r\n|`alignment`       |Alignment |`defaultAlign: Alignment = {element: {horizontal: AlignType.Left,vertical: AlignType.Top},target: {horizontal: AlignType.Left,vertical: AlignType.Bottom}};`|Align element(Popup) with target(`this.alignWithContainer`)|\r\n|`closeOnClick`    |boolean   |`true`     |Close popup and destroy thn component on click out of popup|\r\n\r\n\r\n## License\r\n\r\nThis project is licensed under the MIT license. See the [LICENSE](https://github.com/rd-dev-ukraine/angular-io-overlay/blob/master/LICENSE) file for more info.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rd-dev-ukraine/angular-io-overlay.git"
  },
  "scripts": {
    "deploy": "ng build --prod --base-href \"angular-io-overlay\" && ngh",
    "prepub": "tsc -p tsconfig.publish.json",
    "start": "ng serve"
  },
  "typings": "./src/overlay/index.d.ts",
  "version": "1.2.7"
}
